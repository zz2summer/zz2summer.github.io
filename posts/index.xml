<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 渣渣的夏天</title>
        <link>https://zz2summer.github.io/posts/</link>
        <description>所有文章 | 渣渣的夏天</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>summer2zz@163.com (渣渣的夏天)</managingEditor>
            <webMaster>summer2zz@163.com (渣渣的夏天)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 19 Sep 2022 23:04:44 &#43;0800</lastBuildDate><atom:link href="https://zz2summer.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>LeetCode 之 剑指 Offer 24. 反转链表（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-24.-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8java/</link>
    <pubDate>Mon, 19 Sep 2022 23:04:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-24.-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8java/</guid>
    <description><![CDATA[<p><a href="https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/" target="_blank" rel="noopener noreffer">剑指 Offer 24. 反转链表</a>，定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 22. 链表中倒数第k个节点（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-22.-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9java/</link>
    <pubDate>Mon, 19 Sep 2022 23:03:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-22.-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9java/</guid>
    <description><![CDATA[<p><a href="https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/" target="_blank" rel="noopener noreffer">剑指 Offer 22. 链表中倒数第k个节点</a>，输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-21.-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2java/</link>
    <pubDate>Mon, 19 Sep 2022 23:02:13 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-21.-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2java/</guid>
    <description><![CDATA[<p><a href="https://leetcode.cn/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/" target="_blank" rel="noopener noreffer">剑指 Offer 21. 调整数组顺序使奇数位于偶数前面</a>，输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数在数组的前半部分，所有偶数在数组的后半部分。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 18. 删除链表的节点（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-18.-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E8%8A%82%E7%82%B9java/</link>
    <pubDate>Mon, 19 Sep 2022 23:00:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-18.-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E8%8A%82%E7%82%B9java/</guid>
    <description><![CDATA[<p><a href="https://leetcode.cn/problems/shan-chu-lian-biao-de-jie-dian-lcof/" target="_blank" rel="noopener noreffer">剑指 Offer 18. 删除链表的节点</a>，给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。返回删除后的链表的头节点。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 17. 打印从1到最大的n位数（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-17.-%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0java/</link>
    <pubDate>Mon, 19 Sep 2022 22:56:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-17.-%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0java/</guid>
    <description><![CDATA[<p><a href="https://leetcode.cn/problems/da-yin-cong-1dao-zui-da-de-nwei-shu-lcof/" target="_blank" rel="noopener noreffer">剑指 Offer 17. 打印从1到最大的n位数</a>，输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 16. 数值的整数次方（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-16.-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9java/</link>
    <pubDate>Tue, 05 Jul 2022 22:43:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-16.-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9java/</guid>
    <description><![CDATA[<p>剑指 Offer 16. 数值的整数次方实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 15. 二进制中1的个数（Java） </title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-15.-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0java/</link>
    <pubDate>Tue, 05 Jul 2022 22:37:29 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-15.-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0java/</guid>
    <description><![CDATA[<p>剑指 Offer 15. 二进制中1的个数编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为 汉明重量).）。提示：请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。在 Java 中，编译器使用 二进制补码 记法来表示有符号整数。因此，在上面的 示例 3 中，输入表示有符号整数 -3。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 14  II. 剪绳子 II （Java） </title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-14-ii.-%E5%89%AA%E7%BB%B3%E5%AD%90-ii-java/</link>
    <pubDate>Tue, 15 Mar 2022 10:07:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-14-ii.-%E5%89%AA%E7%BB%B3%E5%AD%90-ii-java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 14- II. 剪绳子 II （Java） ，给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n&gt;1并且m&gt;1），每段绳子的长度记为 <code>k[0],k[1]...k[m - 1] </code>。请问 <code>k[0]*k[1]*...*k[m - 1]</code> 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 14  I. 剪绳子 （Java） </title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-14-i.-%E5%89%AA%E7%BB%B3%E5%AD%90-java/</link>
    <pubDate>Tue, 15 Mar 2022 10:07:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-14-i.-%E5%89%AA%E7%BB%B3%E5%AD%90-java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 14- I. 剪绳子 （Java） ，给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n&gt;1并且m&gt;1），每段绳子的长度记为 <code>k[0],k[1]...k[m-1] </code>。请问 <code>k[0]*k[1]*...*k[m-1]</code> 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 13. 机器人的运动范围 （Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-13.-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4-java/</link>
    <pubDate>Sun, 13 Mar 2022 21:44:39 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-13.-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4-java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 13. 机器人的运动范围（Java），地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？</p>]]></description>
</item></channel>
</rss>
